{"name": "Nokari Profile", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Test_case.test_nokari.Test_Nokari_login object at 0x0000019E0A47C290>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"58e1e9a52b24d98b5e633ee536913c2b\")>\nEnterData = ('tanveeralam5445@gmail.com', 'Talam@786786', 'I have 3+years of experience as a Quality Assurance Engineer, I have ex...n testing, Database testing, Functional\\xa0testing.Rest api testing using postman ,Api automation using python pytest')\n\n    @allure.title(\"Nokari Profile\")\n    @allure.link(\"https://www.naukri.com/\")\n    @allure.id(\"test nokari log1\")\n    @allure.story(\"Nokari Profile Auto Update\")\n    @allure.severity(allure.severity_level.NORMAL)\n    # @pytest.mark.parametrize(\"user,pas,profile\",[(\"tanveeralam7520@gmail.com\",\"Talam@786\",\"I have 3+years of experience as a Quality Assurance Engineer, I have expertise in testing and involved in Manual testing, ETL testing, Automation testing, Database testing, Functional testing.Rest api testing using postman ,Api automation using python pytest\"),(\"tanveeralam5445@gmail.com\",\"Talam@786786\",\"I have 3+years of experience as a Quality Assurance Engineer, I have expertise in testing and involved in Manual testing, ETL testing, Automation testing, Database testing, Functional testing.Rest api testing using postman ,Api automation using python pytest\")])\n    def test_nokari_log1(self,setup,EnterData):\n        self.log.info(\"start Nokari daily update test case \")\n        self.driver = setup\n        self.log.info(\"open webdiver\")\n        self.np= Nokari(self.driver)\n        self.log.info(\"open URL for Nokari loging \")\n        self.np.Url()\n        self.log.info(\"clicking log in button \")\n        self.np.Login()\n        self.log.info(\"Entering User Name\")\n        self.np.Enter_username(EnterData[0])\n        self.log.info(\"Entering Password\")\n        self.np.Enter_password(EnterData[1])\n        self.log.info(\"Clicking loging sumbit button \")\n        self.np.Click_submit()\n        self.log.info(\"Cheking profile view if profle is  visible then click \")\n        if self.np.Click_profile()==True :\n            self.log.info(\"scrooling for employee edit button \")\n            self.np.Scroll_employ()\n            self.log.info(\"clicking empolyedit button\")\n            self.np.Click_employedit()\n            self.log.info(\"Scrolling for summit button \")\n>           self.np.Scroll_summit()\n\nTest_case\\test_nokari.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\Nokariprofile.py:63: in Scroll_summit\n    self.wait.until(ec.visibility_of_element_located(self.Skil_xpath))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"58e1e9a52b24d98b5e633ee536913c2b\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000019E0B13B740>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\ADMIN\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "76961c44-8cfe-4fe7-ba4b-fce3b180a537-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "EnterData", "value": "('tanveeralam5445@gmail.com', 'Talam@786786', 'I have 3+years of experience as a Quality Assurance Engineer, I have expertise in testing and involved in Manual testing, ETL testing, Automation testing, Database testing, Functional\\xa0testing.Rest api testing using postman ,Api automation using python pytest')"}], "start": 1715827702902, "stop": 1715827756485, "uuid": "c2c6e5b5-16fd-4a3f-bf4c-6a6aa6208fe1", "historyId": "228fa9436dbaa5505545a1305badf5eb", "testCaseId": "5d1fc764e99b78a258bcedd8480f27d0", "fullName": "Test_case.test_nokari.Test_Nokari_login#test_nokari_log1", "labels": [{"name": "as_id", "value": "test nokari log1"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "Nokari Profile Auto Update"}, {"name": "parentSuite", "value": "Test_case"}, {"name": "suite", "value": "test_nokari"}, {"name": "subSuite", "value": "Test_Nokari_login"}, {"name": "host", "value": "DESKTOP-CT5ISU8"}, {"name": "thread", "value": "7324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_case.test_nokari"}], "links": [{"type": "link", "url": "https://www.naukri.com/", "name": "https://www.naukri.com/"}]}