{"name": "test_nokari_log1[EnterData0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=124.0.6367.201)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7C8BE1522+60802]\n\t(No symbol) [0x00007FF7C8B5AC22]\n\t(No symbol) [0x00007FF7C8A17CE4]\n\t(No symbol) [0x00007FF7C8A105B3]\n\t(No symbol) [0x00007FF7C8A013E4]\n\t(No symbol) [0x00007FF7C8A02C14]\n\t(No symbol) [0x00007FF7C8A01711]\n\t(No symbol) [0x00007FF7C8A01049]\n\t(No symbol) [0x00007FF7C8A00D42]\n\t(No symbol) [0x00007FF7C89FEBE4]\n\t(No symbol) [0x00007FF7C89FF22C]\n\t(No symbol) [0x00007FF7C8A1A9F9]\n\t(No symbol) [0x00007FF7C8AAAB7E]\n\t(No symbol) [0x00007FF7C8A8AB7A]\n\t(No symbol) [0x00007FF7C8AAA224]\n\t(No symbol) [0x00007FF7C8A8A923]\n\t(No symbol) [0x00007FF7C8A58FEC]\n\t(No symbol) [0x00007FF7C8A59C21]\n\tGetHandleVerifier [0x00007FF7C8EE41BD+3217949]\n\tGetHandleVerifier [0x00007FF7C8F26157+3488183]\n\tGetHandleVerifier [0x00007FF7C8F1F0DF+3459391]\n\tGetHandleVerifier [0x00007FF7C8C9B8E6+823622]\n\t(No symbol) [0x00007FF7C8B65FBF]\n\t(No symbol) [0x00007FF7C8B60EE4]\n\t(No symbol) [0x00007FF7C8B61072]\n\t(No symbol) [0x00007FF7C8B518C4]\n\tBaseThreadInitThunk [0x00007FFE6D547344+20]\n\tRtlUserThreadStart [0x00007FFE6D7626B1+33]", "trace": "self = <Test_case.test_nokari.Test_Nokari_login object at 0x000001DE9AE0C650>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"48bb9a21a27b7ec4cb4a8e14d766eb40\")>\nEnterData = ('tanveeralam7520@gmail.com', 'Talam@786', 'I have 3+years of experience as a Quality Assurance Engineer, I have exper...n testing, Database testing, Functional\\xa0testing.Rest api testing using postman ,Api automation using python pytest')\n\n    def test_nokari_log1(self,setup,EnterData):\n        self.log.info(\"start Nokari daily update test case \")\n        self.driver = setup\n        self.log.info(\"open webdiver\")\n        self.np= Nokari(self.driver)\n        self.log.info(\"open URL for Nokari loging \")\n>       self.np.Url()\n\nTest_case\\test_nokari.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage_object\\Nokariprofile.py:30: in Url\n    self.driver.get(\"https://www.naukri.com/\")\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DE9C9B1F50>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...07FF7C8B518C4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE6D547344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE6D7626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=124.0.6367.201)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7C8BE1522+60802]\nE       \t(No symbol) [0x00007FF7C8B5AC22]\nE       \t(No symbol) [0x00007FF7C8A17CE4]\nE       \t(No symbol) [0x00007FF7C8A105B3]\nE       \t(No symbol) [0x00007FF7C8A013E4]\nE       \t(No symbol) [0x00007FF7C8A02C14]\nE       \t(No symbol) [0x00007FF7C8A01711]\nE       \t(No symbol) [0x00007FF7C8A01049]\nE       \t(No symbol) [0x00007FF7C8A00D42]\nE       \t(No symbol) [0x00007FF7C89FEBE4]\nE       \t(No symbol) [0x00007FF7C89FF22C]\nE       \t(No symbol) [0x00007FF7C8A1A9F9]\nE       \t(No symbol) [0x00007FF7C8AAAB7E]\nE       \t(No symbol) [0x00007FF7C8A8AB7A]\nE       \t(No symbol) [0x00007FF7C8AAA224]\nE       \t(No symbol) [0x00007FF7C8A8A923]\nE       \t(No symbol) [0x00007FF7C8A58FEC]\nE       \t(No symbol) [0x00007FF7C8A59C21]\nE       \tGetHandleVerifier [0x00007FF7C8EE41BD+3217949]\nE       \tGetHandleVerifier [0x00007FF7C8F26157+3488183]\nE       \tGetHandleVerifier [0x00007FF7C8F1F0DF+3459391]\nE       \tGetHandleVerifier [0x00007FF7C8C9B8E6+823622]\nE       \t(No symbol) [0x00007FF7C8B65FBF]\nE       \t(No symbol) [0x00007FF7C8B60EE4]\nE       \t(No symbol) [0x00007FF7C8B61072]\nE       \t(No symbol) [0x00007FF7C8B518C4]\nE       \tBaseThreadInitThunk [0x00007FFE6D547344+20]\nE       \tRtlUserThreadStart [0x00007FFE6D7626B1+33]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "attachments": [{"name": "log", "source": "6043aac9-5a7f-4db8-9dbe-528e69d44730-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "EnterData", "value": "('tanveeralam7520@gmail.com', 'Talam@786', 'I have 3+years of experience as a Quality Assurance Engineer, I have expertise in testing and involved in Manual testing, ETL testing, Automation testing, Database testing, Functional\\xa0testing.Rest api testing using postman ,Api automation using python pytest')"}], "start": 1715824290606, "stop": 1715824291356, "uuid": "d0887c8c-3e7e-4af0-a41a-d97724b3691d", "historyId": "dfdc701a775a5a8db2c27949a3db7ab4", "testCaseId": "5d1fc764e99b78a258bcedd8480f27d0", "fullName": "Test_case.test_nokari.Test_Nokari_login#test_nokari_log1", "labels": [{"name": "parentSuite", "value": "Test_case"}, {"name": "suite", "value": "test_nokari"}, {"name": "subSuite", "value": "Test_Nokari_login"}, {"name": "host", "value": "DESKTOP-CT5ISU8"}, {"name": "thread", "value": "12924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_case.test_nokari"}]}